server {
   listen 80;
   server_name v1.haoxiaoguai.xyz;
   return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name v1.haoxiaoguai.xyz;
    root /var/www/lunchbox/public;
    index index.php;
    charset utf-8;

    # 引入通用配置
    include /etc/nginx/snippets/ssl.conf;
    include /etc/nginx/snippets/security-headers.conf;


    # 限流
    # limit_req zone=general burst=50 nodelay;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    # PHP处理（普通请求）
    location ~ ^/index\.php(/|$) {
        fastcgi_pass php-upstream;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        include /etc/nginx/snippets/fastcgi-security.conf;
    }

    # 受保护的路径：日志和健康检查 (haoxiaoguai.xyz/logs, haoxiaoguai.xyz/health)
    # 使用 Basic Auth 认证
    location ~ ^/(logs|health) {
        # 启用基本认证
        include /etc/nginx/snippets/base-auth.conf;

        # 先尝试访问静态文件，不存在则转发到 PHP
        try_files $uri $uri/ @protected_php;
    }

    # 命名 location：处理受保护路径的 PHP 请求
    # 这个 location 会自动继承上层的 auth_basic 配置
    location @protected_php {
        # 重写到 index.php 处理
        rewrite ^/(logs|health)(.*)$ /index.php?$query_string last;
    }

    # 处理受保护路径下直接访问的 .php 文件
    # 例如：/logs/debug.php
    location ~ ^/(logs|health)/.*\.php$ {
        # 必须重新声明认证（嵌套 location 不继承外层的 auth）
        include /etc/nginx/snippets/base-auth.conf;

        fastcgi_pass php-upstream;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        include /etc/nginx/snippets/fastcgi-security.conf;
    }

    # 隐藏敏感文件
    location ~ /\.(?!well-known).* {
        deny all;
    }
}
