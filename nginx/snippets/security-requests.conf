# 请求安全增强配置 - Request Security Enhancements
# 此文件应该在 nginx.conf 的 http {} 块中引入

# 1. 缓冲区溢出防护
# 限制各种缓冲区大小，防止缓冲区溢出攻击
client_body_buffer_size 1K;         # 客户端请求体缓冲区（1KB，对于表单提交足够）
client_header_buffer_size 1k;        # 客户端请求头缓冲区（1KB）
large_client_header_buffers 2 1k;    # 大请求头缓冲区（2个，每个1KB）

# 2. 请求超时控制
# 防止慢速攻击（Slowloris）和资源占用
client_body_timeout 10;    # 客户端发送请求体超时（10秒）
client_header_timeout 10;  # 客户端发送请求头超时（10秒）
send_timeout 10;           # 发送响应超时（10秒）

# 3. 连接数限制
# 防止单个 IP 占用过多连接，抵御 DDoS 攻击
limit_conn_zone $binary_remote_addr zone=perip:10m;      # 每个 IP 的连接限制区域
limit_conn_zone $server_name zone=perserver:10m;         # 每个虚拟主机的连接限制区域

# 使用说明：在 server 或 location 块中应用
# limit_conn perip 10;        # 每个 IP 最多 10 个并发连接
# limit_conn perserver 100;   # 每个虚拟主机最多 100 个并发连接

# 4. 请求速率限制（补充限流配置）
# 针对特定请求类型的精细化限流

# API 接口限流
limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;

# 搜索接口限流（防止爬虫滥用）
limit_req_zone $binary_remote_addr zone=search:10m rate=10r/s;

# 文件上传限流
limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;

# 5. Keepalive 超时控制
# 已在主配置中设置为 15 秒，这里添加说明
# keepalive_timeout 15;
# keepalive_requests 100;  # 每个连接最多处理 100 个请求

# 6. 请求大小限制（补充说明）
# client_max_body_size 20M;  # 已在主配置中设置

# 针对不同路径的精细化控制：
# location /upload {
#     client_max_body_size 50M;  # 上传接口允许更大
# }
#
# location /api {
#     client_max_body_size 1M;   # API 接口限制较小
# }

# 7. 连接限制的错误处理
limit_conn_status 503;  # 连接数超限返回 503（服务不可用）
limit_req_status 429;   # 请求速率超限返回 429（请求过多）

# 8. 慢速连接保护
# 配合 client_body_timeout 和 client_header_timeout 使用
reset_timedout_connection on;  # 超时后重置连接，释放资源

# 使用示例：
# ============================================
# 在 http 块中：
#   include /etc/nginx/snippets/security-requests.conf;
#
# 在 server 块中：
#   # 应用连接限制
#   limit_conn perip 10;
#   limit_conn perserver 100;
#
# 在 location 块中（根据需求选择）：
#   location /api {
#       limit_req zone=api burst=100 nodelay;
#   }
#
#   location /search {
#       limit_req zone=search burst=20 nodelay;
#   }
#
#   location /upload {
#       limit_req zone=upload burst=2 nodelay;
#       client_max_body_size 50M;
#   }
#
#   location /admin {
#       limit_req zone=auth_login burst=2 nodelay;
#       limit_conn perip 3;
#   }
# ============================================

# 注意事项：
# 1. 缓冲区设置较小，如果有大请求头（如大 Cookie），可能需要调整
# 2. 超时时间可根据实际应用场景调整
# 3. 连接数限制需要根据服务器性能和预期并发量调整
# 4. 限流区域会占用内存，10m 约可存储 16 万个 IP 的状态
# 5. burst 参数允许短时间突发流量，根据实际需求调整

# 监控建议：
# - 定期检查 limit_conn 和 limit_req 的触发频率
# - 监控 503 和 429 错误的数量
# - 根据业务增长调整限制参数
# - 使用 stub_status 或其他监控工具跟踪连接数

# 性能影响：
# - 这些配置对性能影响很小
# - limit_conn 和 limit_req 使用共享内存，查询效率高
# - 可以有效防止资源耗尽攻击
# - 建议在压力测试后部署到生产环境
