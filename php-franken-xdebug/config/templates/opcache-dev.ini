; ============================================================================
; OPcache 字节码缓存配置 - 开发环境优化
; 开发环境特点：频繁修改代码、需要实时生效、更好的调试体验
; ============================================================================

; 启用 OPcache
opcache.enable=1

; 禁用 CLI 模式的 OPcache（开发环境避免 artisan 命令缓存问题）
opcache.enable_cli=0

; JIT 配置 JIT 与 XDebug 不兼容。如果你需要使用 XDebug 进行调试，JIT 必须被禁用。
;opcache.jit=disable                 ; **禁用 JIT 以确保与 XDebug 兼容**
;opcache.jit_buffer_size=0
opcache.jit=tracing
opcache.jit_buffer_size=256M

; OPcache 内存大小（MB）- 开发环境可适当减少
opcache.memory_consumption=128

; 是否在缓存键中包含脚本文件的工作目录路径
; 1: 包含（推荐，避免路径冲突）
opcache.use_cwd=1

; 缓存文件的最大大小（字节）
; 0 表示无限制
opcache.max_file_size=0

; 最大缓存文件数 - 开发环境通常文件较少
opcache.max_accelerated_files=30000

; ============================================================================
; 开发环境关键配置 - 文件修改检测
; ============================================================================

; 是否验证脚本时间戳
; 1: 验证（开发环境必须启用，确保代码修改实时生效）
opcache.validate_timestamps=1

; 检查脚本时间戳的频率（秒）
; 开发环境设置为 1-2 秒，确保代码修改快速生效
opcache.revalidate_freq=2

; ============================================================================
; 开发环境调试和诊断配置
; ============================================================================

; 启用 OPcache 统计信息（便于监控和调试）
opcache.enable_file_override=0

; 记录缓存未命中的日志（帮助诊断缓存问题）
opcache.log_verbosity_level=1

; 记录缓存统计信息（便于开发调试）
opcache.record_warnings=1

; ============================================================================
; 性能优化配置（开发环境适用）
; ============================================================================

; 启用快速关闭（PHP 7.2+ 特性，提高性能）
opcache.fast_shutdown=1

; 启用二级字符串缓存（PHP 7.3+ 特性）
opcache.interned_strings_buffer=8

; 禁用文件缓存（开发环境不需要持久化缓存）
; opcache.file_cache=

; 文件缓存仅限控制台使用
opcache.file_cache_only=0

; 启用文件缓存覆盖保护
opcache.file_cache_consistency_checks=1

; 内存消耗警告阈值（百分比）
opcache.max_wasted_percentage=5

; ============================================================================
; 开发环境特殊配置
; ============================================================================

; 启用黑名单功能（可排除特定文件不被缓存）
; opcache.blacklist_filename=/path/to/blacklist.txt

; 保存注释（开发环境可能需要查看注释）
opcache.save_comments=1

; 加载注释（保留文档注释，便于反射等操作）
opcache.load_comments=1

; ============================================================================
; 预加载配置（开发环境通常禁用）
; ============================================================================

; 开发环境禁用预加载（避免预加载文件修改带来的问题）
; opcache.preload=

; ============================================================================
; 开发环境 OPcache 配置说明
; ============================================================================

; 主要特点：
; 1. 启用时间戳验证 (validate_timestamps=1)
; 2. 较短的重新验证频率 (revalidate_freq=2)
; 3. 禁用 CLI 缓存 (enable_cli=0)
; 4. 较小的内存分配 (memory_consumption=128)
; 5. 启用调试和统计功能

; 开发环境 vs 生产环境差异：
; - 时间戳验证：开发启用，生产禁用
; - 重新验证频率：开发较短（1-2秒），生产较长或禁用
; - CLI 缓存：开发禁用，生产启用
; - 内存分配：开发较小，生产较大
; - 文件缓存：开发禁用，生产启用

; 使用建议：
; 1. 将此文件重命名为 opcache.ini 用于开发环境
; 2. 生产环境使用原来的生产配置
; 3. 开发时如果遇到缓存问题，可临时重启 PHP-FPM
; 4. 监控 opcache_get_status() 了解缓存使用情况

; 调试命令：
; php -r "print_r(opcache_get_status());"
; php -r "var_dump(opcache_get_configuration());"
